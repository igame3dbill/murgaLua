# data file for the Fltk User Interface Designer (fluid)
version 1.0108 
header_name {.h} 
code_name {.cxx}
Function {make_window()} {open
} {
  code {Q = '"';

C = ',' ;} {}
  code {event_constants = {	["0"]="FL_NO_EVENT",
	["1"]="FL_PUSH",
	["2"]="FL_RELEASE",
	["3"]="FL_ENTER",
	["4"]="FL_LEAVE",
	["5"]="FL_DRAG",
	["6"]="FL_FOCUS",
	["7"]="FL_UNFOCUS",
	["8"]="FL_KEY",
	["9"]="FL_KEYUP",
	["10"]="FL_MOVE",
	["11"]="FL_SHORTCUT",
	["12"]="FL_ACTIVATE",
	["13"]="FL_DEACTIVATE",
	["14"]="FL_SHOW",
	["15"]="FL_HIDE",
	["16"]="FL_VIEWCHANGE",
	["17"]="FL_PASTE",
	["18"]="FL_DND_ENTER",
	["19"]="FL_DND_DRAG",
	["20"]="FL_DND_LEAVE",
	["21"]="FL_DND_RELEASE",
	["21"]="FL_DND_RELEASE",
	["22"]="event_constants[22] = ?",
	["23"]="event_constants[23] = ?"
  } --end event_constants table} {selected
  }
  Fl_Window DWindow {
    label DWindow open
    xywh {629 343 752 250} type Double when 6 visible
  } {
    Fl_Group CompileGroup {
      label Compile open
      xywh {15 14 725 221} labelsize 11
    } {
      Fl_Output pathtomurgalua {
        label {/bin/murgaLua}
        xywh {150 14 413 19} labelsize 11 textsize 11
      }
      Fl_Output comarg {
        label commandargument
        xywh {150 34 413 19} labelsize 11 textsize 11
      }
      Fl_Input mucompiler {
        label murgaLuacompileMurgaLua
        xywh {150 54 413 19} labelsize 11 textsize 11
      }
      Fl_Input pathtoluafile {
        label {path to lua file}
        xywh {150 74 413 19} labelsize 11 when 1 textsize 11
      }
      Fl_Output pathtoapplication {
        label {path to application}
        xywh {150 116 413 19} labelsize 11 textsize 11
      }
      Fl_Output pathtomurga2 {
        label {path to murgaLua}
        xywh {150 94 413 19} labelsize 11 textsize 11
      }
      Fl_Input concatenate {
        label concatenated
        xywh {15 151 545 84} labelsize 11 align 133 textsize 11
      }
      Fl_Output out {
        label {output:}
        xywh {575 21 155 68} labelsize 11 align 5 textsize 11
      }
    }
  }
  code {terminalArg= " -e "
pathtomurgalua:label( murgaLua_ExePath)
pathtomurgalua:value( murgaLua_ExePath)
comarg:value(terminalArg)
mucompiler:value("murgaLua.compileMurgaLua")
pathtoluafile:value("/")
pathtomurga2:value( murgaLua_ExePath)
pathtoapplication:value("/")} {}
  code {function commandupdate()

local luafilepath = pathtoluafile:value()

local N,P = 0,0
for i=string.len(luafilepath),1,-1 do
LL=string.sub(luafilepath,i,i)
if LL == "." then P = i end
if LL =="/" then 
N = i
break 
end
end

if N ~=0 and P ~= 0 then 
apppathout = string.sub(luafilepath,1,N)
lfs.chdir(apppathout)
fullappath=lfs.currentdir()..string.sub(luafilepath,N,P)
else
fullappath =  lfs.currentdir().."*"
end

pathtoapplication:value(fullappath)


concat =  murgaLua_ExePath .. " -e murgaLua.compileMurgaLua("  .. Q .. luafilepath .. Q .. C .. Q..  murgaLua_ExePath ..Q..C..Q..fullappath..Q..")";
concatenate:value(concat)


end} {}
  code {function event_callback()

  local tCount = 1

  repeat

    Fl:wait(1)

    evt = Fl:event()
    if evt ~=nil and evt >  0  then

    	out:value(evt .. "   " .. event_constants["" .. evt])

	    --	if (evt == 7) then tCount = os.exit() end

	    tCount = tCount + 1
		commandupdate()
	  	DWindow:redraw()
    else
	   	tCount = 1
    end

  until tCount <= 0

end} {}
  code {DWindow:show();

loop=event_callback()

Fl:wait(0);
Fl:run();} {}
  code {function commandupdate()
local luafilepath = pathtoluafile:value()
local N,P = 0,0
for i=string.len(luafilepath),1,-1 do
LL=string.sub(luafilepath,i,i)
if LL == "." then P = i end
if LL =="/" then 
N = i
break 
end
end

if N ~=0 and P ~= 0 then 
apppathout = string.sub(luafilepath,1,N).."/"..string.sub(luafilepath,N+1,P)
pathtoapplication:value(apppathout)

end

concat =  murgaLua_ExePath .. comarg:value() .. compilerCommand .. Q .. pathtoluafile:value() .. Q .. C .. Q..  murgaLua_ExePath ..Q..C..Q..pathtoapplication:value()..Q..")";
concatenate:value(concat)


end} {}
} 
